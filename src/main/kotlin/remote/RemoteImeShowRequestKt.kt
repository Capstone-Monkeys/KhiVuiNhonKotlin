//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: remotemessage.proto

package remote;

@kotlin.jvm.JvmName("-initializeremoteImeShowRequest")
inline fun remoteImeShowRequest(block: remote.RemoteImeShowRequestKt.Dsl.() -> kotlin.Unit): remote.Remotemessage.RemoteImeShowRequest =
  remote.RemoteImeShowRequestKt.Dsl._create(remote.Remotemessage.RemoteImeShowRequest.newBuilder()).apply { block() }._build()
object RemoteImeShowRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: remote.Remotemessage.RemoteImeShowRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: remote.Remotemessage.RemoteImeShowRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): remote.Remotemessage.RemoteImeShowRequest = _builder.build()

    /**
     * <code>.remote.RemoteTextFieldStatus remote_text_field_status = 2;</code>
     */
    var remoteTextFieldStatus: remote.Remotemessage.RemoteTextFieldStatus
      @JvmName("getRemoteTextFieldStatus")
      get() = _builder.getRemoteTextFieldStatus()
      @JvmName("setRemoteTextFieldStatus")
      set(value) {
        _builder.setRemoteTextFieldStatus(value)
      }
    /**
     * <code>.remote.RemoteTextFieldStatus remote_text_field_status = 2;</code>
     */
    fun clearRemoteTextFieldStatus() {
      _builder.clearRemoteTextFieldStatus()
    }
    /**
     * <code>.remote.RemoteTextFieldStatus remote_text_field_status = 2;</code>
     * @return Whether the remoteTextFieldStatus field is set.
     */
    fun hasRemoteTextFieldStatus(): kotlin.Boolean {
      return _builder.hasRemoteTextFieldStatus()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun remote.Remotemessage.RemoteImeShowRequest.copy(block: remote.RemoteImeShowRequestKt.Dsl.() -> kotlin.Unit): remote.Remotemessage.RemoteImeShowRequest =
  remote.RemoteImeShowRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val remote.Remotemessage.RemoteImeShowRequestOrBuilder.remoteTextFieldStatusOrNull: remote.Remotemessage.RemoteTextFieldStatus?
  get() = if (hasRemoteTextFieldStatus()) getRemoteTextFieldStatus() else null

