//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: remotemessage.proto

package remote;

@kotlin.jvm.JvmName("-initializeremoteAppInfo")
inline fun remoteAppInfo(block: remote.RemoteAppInfoKt.Dsl.() -> kotlin.Unit): remote.Remotemessage.RemoteAppInfo =
  remote.RemoteAppInfoKt.Dsl._create(remote.Remotemessage.RemoteAppInfo.newBuilder()).apply { block() }._build()
object RemoteAppInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: remote.Remotemessage.RemoteAppInfo.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: remote.Remotemessage.RemoteAppInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): remote.Remotemessage.RemoteAppInfo = _builder.build()

    /**
     * <code>int32 counter = 1;</code>
     */
    var counter: kotlin.Int
      @JvmName("getCounter")
      get() = _builder.getCounter()
      @JvmName("setCounter")
      set(value) {
        _builder.setCounter(value)
      }
    /**
     * <code>int32 counter = 1;</code>
     */
    fun clearCounter() {
      _builder.clearCounter()
    }

    /**
     * <code>int32 int2 = 2;</code>
     */
    var int2: kotlin.Int
      @JvmName("getInt2")
      get() = _builder.getInt2()
      @JvmName("setInt2")
      set(value) {
        _builder.setInt2(value)
      }
    /**
     * <code>int32 int2 = 2;</code>
     */
    fun clearInt2() {
      _builder.clearInt2()
    }

    /**
     * <code>int32 int3 = 3;</code>
     */
    var int3: kotlin.Int
      @JvmName("getInt3")
      get() = _builder.getInt3()
      @JvmName("setInt3")
      set(value) {
        _builder.setInt3(value)
      }
    /**
     * <code>int32 int3 = 3;</code>
     */
    fun clearInt3() {
      _builder.clearInt3()
    }

    /**
     * <code>string int4 = 4;</code>
     */
    var int4: kotlin.String
      @JvmName("getInt4")
      get() = _builder.getInt4()
      @JvmName("setInt4")
      set(value) {
        _builder.setInt4(value)
      }
    /**
     * <code>string int4 = 4;</code>
     */
    fun clearInt4() {
      _builder.clearInt4()
    }

    /**
     * <code>int32 int7 = 7;</code>
     */
    var int7: kotlin.Int
      @JvmName("getInt7")
      get() = _builder.getInt7()
      @JvmName("setInt7")
      set(value) {
        _builder.setInt7(value)
      }
    /**
     * <code>int32 int7 = 7;</code>
     */
    fun clearInt7() {
      _builder.clearInt7()
    }

    /**
     * <code>int32 int8 = 8;</code>
     */
    var int8: kotlin.Int
      @JvmName("getInt8")
      get() = _builder.getInt8()
      @JvmName("setInt8")
      set(value) {
        _builder.setInt8(value)
      }
    /**
     * <code>int32 int8 = 8;</code>
     */
    fun clearInt8() {
      _builder.clearInt8()
    }

    /**
     * <code>string label = 10;</code>
     */
    var label: kotlin.String
      @JvmName("getLabel")
      get() = _builder.getLabel()
      @JvmName("setLabel")
      set(value) {
        _builder.setLabel(value)
      }
    /**
     * <code>string label = 10;</code>
     */
    fun clearLabel() {
      _builder.clearLabel()
    }

    /**
     * <code>string app_package = 12;</code>
     */
    var appPackage: kotlin.String
      @JvmName("getAppPackage")
      get() = _builder.getAppPackage()
      @JvmName("setAppPackage")
      set(value) {
        _builder.setAppPackage(value)
      }
    /**
     * <code>string app_package = 12;</code>
     */
    fun clearAppPackage() {
      _builder.clearAppPackage()
    }

    /**
     * <code>int32 int13 = 13;</code>
     */
    var int13: kotlin.Int
      @JvmName("getInt13")
      get() = _builder.getInt13()
      @JvmName("setInt13")
      set(value) {
        _builder.setInt13(value)
      }
    /**
     * <code>int32 int13 = 13;</code>
     */
    fun clearInt13() {
      _builder.clearInt13()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun remote.Remotemessage.RemoteAppInfo.copy(block: remote.RemoteAppInfoKt.Dsl.() -> kotlin.Unit): remote.Remotemessage.RemoteAppInfo =
  remote.RemoteAppInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

