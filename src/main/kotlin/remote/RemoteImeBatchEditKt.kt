//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: remotemessage.proto

package remote;

@kotlin.jvm.JvmName("-initializeremoteImeBatchEdit")
inline fun remoteImeBatchEdit(block: remote.RemoteImeBatchEditKt.Dsl.() -> kotlin.Unit): remote.Remotemessage.RemoteImeBatchEdit =
  remote.RemoteImeBatchEditKt.Dsl._create(remote.Remotemessage.RemoteImeBatchEdit.newBuilder()).apply { block() }._build()
object RemoteImeBatchEditKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: remote.Remotemessage.RemoteImeBatchEdit.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: remote.Remotemessage.RemoteImeBatchEdit.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): remote.Remotemessage.RemoteImeBatchEdit = _builder.build()

    /**
     * <code>int32 ime_counter = 1;</code>
     */
    var imeCounter: kotlin.Int
      @JvmName("getImeCounter")
      get() = _builder.getImeCounter()
      @JvmName("setImeCounter")
      set(value) {
        _builder.setImeCounter(value)
      }
    /**
     * <code>int32 ime_counter = 1;</code>
     */
    fun clearImeCounter() {
      _builder.clearImeCounter()
    }

    /**
     * <code>int32 field_counter = 2;</code>
     */
    var fieldCounter: kotlin.Int
      @JvmName("getFieldCounter")
      get() = _builder.getFieldCounter()
      @JvmName("setFieldCounter")
      set(value) {
        _builder.setFieldCounter(value)
      }
    /**
     * <code>int32 field_counter = 2;</code>
     */
    fun clearFieldCounter() {
      _builder.clearFieldCounter()
    }

    /**
     * <code>.remote.RemoteEditInfo edit_info = 3;</code>
     */
    var editInfo: remote.Remotemessage.RemoteEditInfo
      @JvmName("getEditInfo")
      get() = _builder.getEditInfo()
      @JvmName("setEditInfo")
      set(value) {
        _builder.setEditInfo(value)
      }
    /**
     * <code>.remote.RemoteEditInfo edit_info = 3;</code>
     */
    fun clearEditInfo() {
      _builder.clearEditInfo()
    }
    /**
     * <code>.remote.RemoteEditInfo edit_info = 3;</code>
     * @return Whether the editInfo field is set.
     */
    fun hasEditInfo(): kotlin.Boolean {
      return _builder.hasEditInfo()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun remote.Remotemessage.RemoteImeBatchEdit.copy(block: remote.RemoteImeBatchEditKt.Dsl.() -> kotlin.Unit): remote.Remotemessage.RemoteImeBatchEdit =
  remote.RemoteImeBatchEditKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val remote.Remotemessage.RemoteImeBatchEditOrBuilder.editInfoOrNull: remote.Remotemessage.RemoteEditInfo?
  get() = if (hasEditInfo()) getEditInfo() else null

