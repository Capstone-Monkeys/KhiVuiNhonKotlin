//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: remotemessage.proto

package remote;

@kotlin.jvm.JvmName("-initializeremoteEditInfo")
inline fun remoteEditInfo(block: remote.RemoteEditInfoKt.Dsl.() -> kotlin.Unit): remote.Remotemessage.RemoteEditInfo =
  remote.RemoteEditInfoKt.Dsl._create(remote.Remotemessage.RemoteEditInfo.newBuilder()).apply { block() }._build()
object RemoteEditInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: remote.Remotemessage.RemoteEditInfo.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: remote.Remotemessage.RemoteEditInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): remote.Remotemessage.RemoteEditInfo = _builder.build()

    /**
     * <code>int32 insert = 2;</code>
     */
    var insert: kotlin.Int
      @JvmName("getInsert")
      get() = _builder.getInsert()
      @JvmName("setInsert")
      set(value) {
        _builder.setInsert(value)
      }
    /**
     * <code>int32 insert = 2;</code>
     */
    fun clearInsert() {
      _builder.clearInsert()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun remote.Remotemessage.RemoteEditInfo.copy(block: remote.RemoteEditInfoKt.Dsl.() -> kotlin.Unit): remote.Remotemessage.RemoteEditInfo =
  remote.RemoteEditInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

