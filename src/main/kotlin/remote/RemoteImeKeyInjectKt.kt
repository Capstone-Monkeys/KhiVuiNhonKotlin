//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: remotemessage.proto

package remote;

@kotlin.jvm.JvmName("-initializeremoteImeKeyInject")
inline fun remoteImeKeyInject(block: remote.RemoteImeKeyInjectKt.Dsl.() -> kotlin.Unit): remote.Remotemessage.RemoteImeKeyInject =
  remote.RemoteImeKeyInjectKt.Dsl._create(remote.Remotemessage.RemoteImeKeyInject.newBuilder()).apply { block() }._build()
object RemoteImeKeyInjectKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: remote.Remotemessage.RemoteImeKeyInject.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: remote.Remotemessage.RemoteImeKeyInject.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): remote.Remotemessage.RemoteImeKeyInject = _builder.build()

    /**
     * <code>.remote.RemoteAppInfo app_info = 1;</code>
     */
    var appInfo: remote.Remotemessage.RemoteAppInfo
      @JvmName("getAppInfo")
      get() = _builder.getAppInfo()
      @JvmName("setAppInfo")
      set(value) {
        _builder.setAppInfo(value)
      }
    /**
     * <code>.remote.RemoteAppInfo app_info = 1;</code>
     */
    fun clearAppInfo() {
      _builder.clearAppInfo()
    }
    /**
     * <code>.remote.RemoteAppInfo app_info = 1;</code>
     * @return Whether the appInfo field is set.
     */
    fun hasAppInfo(): kotlin.Boolean {
      return _builder.hasAppInfo()
    }

    /**
     * <code>.remote.RemoteTextFieldStatus text_field_status = 2;</code>
     */
    var textFieldStatus: remote.Remotemessage.RemoteTextFieldStatus
      @JvmName("getTextFieldStatus")
      get() = _builder.getTextFieldStatus()
      @JvmName("setTextFieldStatus")
      set(value) {
        _builder.setTextFieldStatus(value)
      }
    /**
     * <code>.remote.RemoteTextFieldStatus text_field_status = 2;</code>
     */
    fun clearTextFieldStatus() {
      _builder.clearTextFieldStatus()
    }
    /**
     * <code>.remote.RemoteTextFieldStatus text_field_status = 2;</code>
     * @return Whether the textFieldStatus field is set.
     */
    fun hasTextFieldStatus(): kotlin.Boolean {
      return _builder.hasTextFieldStatus()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun remote.Remotemessage.RemoteImeKeyInject.copy(block: remote.RemoteImeKeyInjectKt.Dsl.() -> kotlin.Unit): remote.Remotemessage.RemoteImeKeyInject =
  remote.RemoteImeKeyInjectKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val remote.Remotemessage.RemoteImeKeyInjectOrBuilder.appInfoOrNull: remote.Remotemessage.RemoteAppInfo?
  get() = if (hasAppInfo()) getAppInfo() else null

val remote.Remotemessage.RemoteImeKeyInjectOrBuilder.textFieldStatusOrNull: remote.Remotemessage.RemoteTextFieldStatus?
  get() = if (hasTextFieldStatus()) getTextFieldStatus() else null

