//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: polo.proto

package com.google.polo.wire.protobuf;

@kotlin.jvm.JvmName("-initializeconfigurationAck")
inline fun configurationAck(block: com.google.polo.wire.protobuf.ConfigurationAckKt.Dsl.() -> kotlin.Unit): com.google.polo.wire.protobuf.PoloProto.ConfigurationAck =
  com.google.polo.wire.protobuf.ConfigurationAckKt.Dsl._create(com.google.polo.wire.protobuf.PoloProto.ConfigurationAck.newBuilder()).apply { block() }._build()
object ConfigurationAckKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.google.polo.wire.protobuf.PoloProto.ConfigurationAck.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.polo.wire.protobuf.PoloProto.ConfigurationAck.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.polo.wire.protobuf.PoloProto.ConfigurationAck = _builder.build()
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.google.polo.wire.protobuf.PoloProto.ConfigurationAck.copy(block: com.google.polo.wire.protobuf.ConfigurationAckKt.Dsl.() -> kotlin.Unit): com.google.polo.wire.protobuf.PoloProto.ConfigurationAck =
  com.google.polo.wire.protobuf.ConfigurationAckKt.Dsl._create(this.toBuilder()).apply { block() }._build()

