//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: polo.proto

package com.google.polo.wire.protobuf;

@kotlin.jvm.JvmName("-initializepairingRequestAck")
inline fun pairingRequestAck(block: com.google.polo.wire.protobuf.PairingRequestAckKt.Dsl.() -> kotlin.Unit): com.google.polo.wire.protobuf.PoloProto.PairingRequestAck =
  com.google.polo.wire.protobuf.PairingRequestAckKt.Dsl._create(com.google.polo.wire.protobuf.PoloProto.PairingRequestAck.newBuilder()).apply { block() }._build()
object PairingRequestAckKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.google.polo.wire.protobuf.PoloProto.PairingRequestAck.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.polo.wire.protobuf.PoloProto.PairingRequestAck.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.polo.wire.protobuf.PoloProto.PairingRequestAck = _builder.build()

    /**
     * <pre>
     * Descriptive name of the server.
     * </pre>
     *
     * <code>optional string server_name = 1;</code>
     */
    var serverName: kotlin.String
      @JvmName("getServerName")
      get() = _builder.getServerName()
      @JvmName("setServerName")
      set(value) {
        _builder.setServerName(value)
      }
    /**
     * <pre>
     * Descriptive name of the server.
     * </pre>
     *
     * <code>optional string server_name = 1;</code>
     */
    fun clearServerName() {
      _builder.clearServerName()
    }
    /**
     * <pre>
     * Descriptive name of the server.
     * </pre>
     *
     * <code>optional string server_name = 1;</code>
     * @return Whether the serverName field is set.
     */
    fun hasServerName(): kotlin.Boolean {
      return _builder.hasServerName()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.google.polo.wire.protobuf.PoloProto.PairingRequestAck.copy(block: com.google.polo.wire.protobuf.PairingRequestAckKt.Dsl.() -> kotlin.Unit): com.google.polo.wire.protobuf.PoloProto.PairingRequestAck =
  com.google.polo.wire.protobuf.PairingRequestAckKt.Dsl._create(this.toBuilder()).apply { block() }._build()

