//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: polo.proto

package com.google.polo.wire.protobuf;

@kotlin.jvm.JvmName("-initializepairingRequest")
inline fun pairingRequest(block: com.google.polo.wire.protobuf.PairingRequestKt.Dsl.() -> kotlin.Unit): com.google.polo.wire.protobuf.PoloProto.PairingRequest =
  com.google.polo.wire.protobuf.PairingRequestKt.Dsl._create(com.google.polo.wire.protobuf.PoloProto.PairingRequest.newBuilder()).apply { block() }._build()
object PairingRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.google.polo.wire.protobuf.PoloProto.PairingRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.polo.wire.protobuf.PoloProto.PairingRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.polo.wire.protobuf.PoloProto.PairingRequest = _builder.build()

    /**
     * <pre>
     * String name of the service to pair with.  The name used should be an
     * established convention of the application protocol.
     * </pre>
     *
     * <code>required string service_name = 1;</code>
     */
    var serviceName: kotlin.String
      @JvmName("getServiceName")
      get() = _builder.getServiceName()
      @JvmName("setServiceName")
      set(value) {
        _builder.setServiceName(value)
      }
    /**
     * <pre>
     * String name of the service to pair with.  The name used should be an
     * established convention of the application protocol.
     * </pre>
     *
     * <code>required string service_name = 1;</code>
     */
    fun clearServiceName() {
      _builder.clearServiceName()
    }
    /**
     * <pre>
     * String name of the service to pair with.  The name used should be an
     * established convention of the application protocol.
     * </pre>
     *
     * <code>required string service_name = 1;</code>
     * @return Whether the serviceName field is set.
     */
    fun hasServiceName(): kotlin.Boolean {
      return _builder.hasServiceName()
    }

    /**
     * <pre>
     * Descriptive name of the client.
     * </pre>
     *
     * <code>optional string client_name = 2;</code>
     */
    var clientName: kotlin.String
      @JvmName("getClientName")
      get() = _builder.getClientName()
      @JvmName("setClientName")
      set(value) {
        _builder.setClientName(value)
      }
    /**
     * <pre>
     * Descriptive name of the client.
     * </pre>
     *
     * <code>optional string client_name = 2;</code>
     */
    fun clearClientName() {
      _builder.clearClientName()
    }
    /**
     * <pre>
     * Descriptive name of the client.
     * </pre>
     *
     * <code>optional string client_name = 2;</code>
     * @return Whether the clientName field is set.
     */
    fun hasClientName(): kotlin.Boolean {
      return _builder.hasClientName()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.google.polo.wire.protobuf.PoloProto.PairingRequest.copy(block: com.google.polo.wire.protobuf.PairingRequestKt.Dsl.() -> kotlin.Unit): com.google.polo.wire.protobuf.PoloProto.PairingRequest =
  com.google.polo.wire.protobuf.PairingRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

